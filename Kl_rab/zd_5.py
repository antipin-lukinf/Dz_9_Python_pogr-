"""
–ó–∞–¥–∞–Ω–∏–µ ‚Ññ5
üìå –û–±—ä–µ–¥–∏–Ω–∏—Ç–µ —Ñ—É–Ω–∫—Ü–∏–∏ –∏–∑ –ø—Ä–æ—à–ª—ã—Ö –∑–∞–¥–∞—á.
üìå –§—É–Ω–∫—Ü–∏—é —É–≥–∞–¥–∞–π–∫—É –∑–∞–¥–µ–∫–æ—Ä–∏—Ä—É–π—Ç–µ:
‚óã –¥–µ–∫–æ—Ä–∞—Ç–æ—Ä–∞–º–∏ –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤,
‚óã –¥–µ–∫–æ—Ä–∞—Ç–æ—Ä–æ–º –∫–æ–Ω—Ç—Ä–æ–ª—è –∑–Ω–∞—á–µ–Ω–∏–π –∏
‚óã –¥–µ–∫–æ—Ä–∞—Ç–æ—Ä–æ–º –¥–ª—è –º–Ω–æ–≥–æ–∫—Ä–∞—Ç–Ω–æ–≥–æ –∑–∞–ø—É—Å–∫–∞.
üìå –í—ã–±–µ—Ä–∏—Ç–µ –≤–µ—Ä–Ω—ã–π –ø–æ—Ä—è–¥–æ–∫ –¥–µ–∫–æ—Ä–∞—Ç–æ—Ä–æ–≤.
"""
import json
import os
import random
from functools import wraps
from typing import Callable


def counter(number):

    def dec(func):
        @wraps(func)
        def wrapper(*args, **kwargs):
            result = []
            for _ in range(number):
                result.append(func(*args, **kwargs))
            return tuple(result)

        return wrapper

    return dec


def checker(func) -> Callable:
    # num_range = int(input('–í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ –æ—Ç 0 –¥–æ 100 : '))
    # attempts = int(input('–í–≤–µ–¥–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–ø—ã—Ç–æ–∫ –æ—Ç 1 –¥–æ 10 : '))
    # num_sc = random.randint(1, num_range)
    @wraps(func)
    def wrapper(guess: int, attempts: int):
        guess = guess if 1 < guess < 100 else random.randint(1, 100)
        attempts = attempts if 1 < attempts < 10 else random.randint(1, 10)

        return func(guess, attempts)

    return wrapper


def writer(file_name) -> Callable:
    def inner_func(func):
        @wraps(func)
        def wrapper(number, tries):
            my_dict = {str(func(number, tries)): (number, tries)}

            if os.path.exists(file_name):
                with open(file_name, 'a', encoding='utf-8') as f:
                    json.dump(my_dict, f, ensure_ascii=False, indent=4)
            else:
                with open(file_name, 'w', encoding='utf-8') as f:
                    json.dump(my_dict, f, ensure_ascii=False, indent=4)
            return func(number, tries)

        return wrapper

    return inner_func


@writer('guess_game.json')
@checker
@counter(3)
def game_guess(num_sc, attempts):
    """–ò–≥—Ä–∞ —É–≥–∞–¥–∞–π–∫–∞"""
    result_attempts = 0
    while attempts:
        print(f'–û—Å—Ç–∞–ª–æ—Å—å {attempts} –ø–æ–ø—ã—Ç–æ–∫.', end=' ')
        attempts -= 1
        num = int(input('–í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ : '))
        if num == num_sc:
            print('–í—ã —É–≥–∞–¥–∞–ª–∏')
            return result_attempts
        else:
            advice = ['–º–µ–Ω—å—à–µ', '–±–æ–ª—å—à–µ']
            print(f'–¢–≤–æ–µ —á–∏—Å–ª–æ {advice[num > num_sc]}')
            result_attempts += 1
    else:
        print(f'–ü–æ–ø—ã—Ç–∫–∏ –∑–∞–∫–æ–Ω—á–∏–ª–∏—Å—å –∏ —Ç—ã –Ω–µ —É–≥–∞–¥–∞–ª, –±—ã–ª–æ –∑–∞–≥–∞–¥–∞–Ω–Ω–æ —á–∏—Å–ª–æ {num_sc}')
    return result_attempts

help(game_guess)
# game_guess(10, 567)
